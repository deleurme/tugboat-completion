# vim: ft=sh 
#    __              __                __ 
#   / /___  ______ _/ /_  ____  ____ _/ /_
#  / __/ / / / __ `/ __ \/ __ \/ __ `/ __/
# / /_/ /_/ / /_/ / /_/ / /_/ / /_/ / /_  
# \__/\__,_/\__, /_.___/\____/\__,_/\__/  
#          /____/                         
#
# Tested on linux and osx. might work on solaris or freebsd.
#
_tugboat() {
  local cur prev opts base
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  commands="add-key assigned authorize config create destroy destroy_image
            droplets halt help images info info_image keys password-reset rebuild 
            regions resize restart sizes snapshot ssh start verify version wait"

  help_lookup="add-key assigned authorize config create destroy destroy_image
            droplets halt help images info info_image keys password-reset rebuild 
            regions resize restart sizes snapshot ssh start verify version wait"

  # Commands:
  #   tugboat add-key KEY-NAME                             # Upload an ssh public key to DigitalOcean, to be assigned to ...
  #   tugboat authorize                                    # Authorize a DigitalOcean account with tugboat
  #   tugboat config                                       # Show your current config information
  #   tugboat create NAME                                  # Create a droplet.
  #   tugboat destroy FUZZY_NAME                           # Destroy a droplet
  #   tugboat destroy_image FUZZY_NAME                     # Destroy an image
  #   tugboat droplets                                     # Retrieve a list of your droplets
  #   tugboat halt FUZZY_NAME                              # Shutdown a droplet
  #   tugboat help [COMMAND]                               # Describe commands or a specific command
  #   tugboat images [OPTIONS]                             # Retrieve a list of your images
  #   tugboat info FUZZY_NAME [OPTIONS]                    # Show a droplet's information
  #   tugboat info_image FUZZY_NAME [OPTIONS]              # Show an image's information
  #   tugboat keys                                         # Show available SSH keys
  #   tugboat password-reset FUZZY_NAME                    # Reset root password
  #   tugboat rebuild FUZZY_NAME IMAGE_NAME                # Rebuild a droplet.
  #   tugboat regions                                      # Show regions
  #   tugboat resize FUZZY_NAME -s, --size=N               # Resize a droplet
  #   tugboat restart FUZZY_NAME                           # Restart a droplet
  #   tugboat sizes                                        # Show available droplet sizes
  #   tugboat snapshot SNAPSHOT_NAME FUZZY_NAME [OPTIONS]  # Queue a snapshot of the droplet.
  #   tugboat ssh FUZZY_NAME                               # SSH into a droplet
  #   tugboat start FUZZY_NAME                             # Start a droplet
  #   tugboat verify                                       # Check your DigitalOcean credentials
  #   tugboat version                                      # Show version
  #   tugboat wait FUZZY_NAME                              # Wait for a droplet to reach a state

  # Options:
  #   -q, [--quiet]
  #
  case "${prev}" in
    help )
      args=$(for word in $help_lookup;do echo "$word";done)
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    images )
      COMPREPLY=( $(compgen -W "--global" -- "${cur}") )
      return 0
      ;;
    add-key )
      COMPREPLY=( $(compgen -W "-q --quiet -k --key -p --path" -- "${cur}") )
      return 0
      ;;
    password_reset )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    info_image )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    rebuild )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    restart )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    start )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    # -i, --id=ID]                    # The ID of the droplet.
    # -n, --name=NAME]                # The exact name of the droplet
    # -p, --ssh-port=SSH_PORT]        # The custom SSH Port to connect to
    # -t, --use-private-ip]           # Use Private IP while private IP is present
    # -u, --ssh-user=SSH_USER]        # Specifies which user to log in as
    # -o, --ssh-opts=SSH_OPTS]        # Custom SSH options
    # -c, --ssh-command=SSH_COMMAND]  # Command to run on the droplet
    # -q, --quiet]
    ssh )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    wait )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
    info )
      droplets=$(tugboat droplets |awk '{print $1}')
      COMPREPLY=( $(compgen -W "${droplets}" -- "${cur}") )
      return 0
      ;;
  esac

  COMPREPLY=($(compgen -W "${commands}" -- "${cur}"))
  return 0
}


complete -F _tugboat tugboat
